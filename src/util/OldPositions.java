package util;

public final class OldPositions {

	
	public final static char[][] puzzleSetup1 = {
		{'R', ' ', ' ', ' ', 'K', ' ', 'N', 'R'},
		{'P', 'P', 'P', 'B', ' ', 'P', 'P', 'P'},
		{' ', ' ', ' ', 'P', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{' ', 'p', 'p', ' ', 'p', ' ', 'N', 'p'},
		{' ', ' ', 'n', ' ', ' ', 'Q', ' ', ' '},
		{' ', 'p', ' ', ' ', 'q', ' ', 'n', ' '},
		{'r', ' ', 'b', 'k', ' ', 'b', ' ', 'r'},
		{'1', '1', '0', '0', '0', '0'}
	}; //kd1c2, Qxq, f1e2, Nxr
	
	public final static char[][] puzzleSetup2 = {
		{'R', ' ', ' ', 'Q', 'K', 'B', ' ', ' '},
		{'P', 'P', 'P', ' ', ' ', ' ', 'P', 'R'},
		{' ', ' ', 'N', ' ', ' ', 'P', 'p', ' '},
		{' ', ' ', ' ', 'P', ' ', ' ', ' ', ' '},
		{'p', ' ', 'N', 'p', ' ', 'P', 'p', ' '},
		{' ', ' ', ' ', ' ', ' ', 'p', ' ', ' '},
		{' ', 'p', 'p', ' ', 'n', ' ', ' ', ' '},
		{'r', 'n', 'q', ' ', 'k', 'b', ' ', ' '},
		{'0', '0', '0', '1', '0', '1'}
	};
	
	public final static char[][] puzzleSetup3 = {
		{'R', ' ', ' ', ' ', ' ', 'R', 'K', ' '},
		{'P', ' ', 'P', ' ', ' ', ' ', 'P', 'P'},
		{' ', ' ', ' ', ' ', 'P', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', 'N', ' ', ' ', ' '},
		{' ', 'Q', ' ', 'P', 'q', ' ', 'P', ' '},
		{' ', ' ', ' ', 'p', ' ', ' ', ' ', ' '},
		{'p', 'p', 'p', 'n', ' ', 'p', ' ', 'p'},
		{'r', ' ', ' ', ' ', 'k', ' ', ' ', 'r'},
		{'0', '1', '1', '1', '0', '0'}
	};
	
	public final static char[][] queenSac1 = {
		{'R', 'N', ' ', 'Q', 'K', 'B', ' ', 'R'},
		{'P', 'P', 'P', ' ', ' ', 'P', 'P', 'P'},
		{' ', ' ', ' ', ' ', ' ', 'N', ' ', ' '},
		{' ', ' ', ' ', 'P', 'b', ' ', ' ', ' '},
		{' ', ' ', ' ', 'p', 'B', ' ', 'q', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{'p', 'p', 'p', ' ', ' ', 'p', 'p', 'p'},
		{'r', 'n', ' ', ' ', 'k', 'b', 'n', 'r'}
	};
	
	public final static char[][] queenSac2 = {
		{'R', 'N', 'B', ' ', 'K', ' ', 'N', 'R'},
		{'P', 'P', 'P', 'P', ' ', ' ', ' ', 'P'},
		{' ', ' ', ' ', ' ', 'P', 'P', 'P', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', 'p', 'p', ' ', ' ', ' '},
		{'Q', ' ', 'p', 'b', 'b', 'n', ' ', ' '},
		{'p', ' ', 'p', 'q', ' ', 'p', 'p', 'p'},
		{'r', 'r', ' ', ' ', ' ', ' ', 'k', ' '},
		{'1', '0', '0', '0', '1', '1'}
	};
	
	public final static char[][] enPassanteMistake = {
		{'R', ' ', ' ', ' ', ' ', 'B', ' ', 'R'},
		{' ', ' ', ' ', 'K', 'P', 'P', ' ', ' '},
		{' ', ' ', ' ', 'P', ' ', 'P', ' ', ' '},
		{' ', 'B', 'P', ' ', ' ', ' ', ' ', ' '},
		{' ', 'P', ' ', ' ', 'p', 'p', ' ', ' '},
		{' ', 'p', ' ', 'p', ' ', 'n', ' ', 'p'},
		{'p', ' ', 'p', ' ', 'n', ' ', 'p', ' '},
		{' ', ' ', ' ', 'r', ' ', 'r', 'k', ' '},
		{'1', '1', '1', '1', '1', '1'}
	}; //white to move
	
	public final static char[][] rookSack = {
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{'P', ' ', ' ', ' ', ' ', ' ', 'P', ' '},
		{'P', 'B', ' ', ' ', ' ', ' ', 'P', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', 'b', ' '},
		{' ', 'p', 'k', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', 'p', ' ', ' ', 'p', ' ', ' '},
		{'p', ' ', ' ', ' ', 'R', ' ', 'p', 'p'},
		{'r', 'r', ' ', ' ', ' ', ' ', ' ', 'k'},
		{'1', '1', '1', '1', '1', '1'}
	}; //white to move, does rook b1->b2
	
	public final static char[][] queenKingFork = {
		{'R', 'N', 'B', ' ', ' ', ' ', ' ', 'R'},
		{'P', 'P', 'P', 'P', ' ', 'K', 'P', 'P'},
		{' ', ' ', ' ', ' ', ' ', 'N', ' ', ' '},
		{' ', ' ', 'B', ' ', 'p', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', 'b', ' ', ' '},
		{' ', ' ', 'Q', 'p', ' ', ' ', ' ', ' '},
		{'p', ' ', 'p', ' ', ' ', ' ', 'p', 'p'},
		{'r', ' ', ' ', 'q', ' ', 'r', ' ', 'k'},
		{'1', '1', '1', '1', '1', '1'}
	}; //black to move, Nd5 leaving bishop to reveal check fork

	public final static char[][] bishopSack = {
		{'R', ' ', 'B', 'Q', 'K', 'B', ' ', 'R'},
		{'P', 'P', 'P', ' ', 'P', 'P', 'P', 'P'},
		{' ', ' ', 'N', 'P', ' ', 'N', ' ', ' '},
		{' ', ' ', ' ', 'p', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', 'p', ' ', ' ', ' '},
		{' ', ' ', 'n', ' ', ' ', ' ', ' ', ' '},
		{'p', 'p', 'p', ' ', ' ', 'p', 'p', 'p'},
		{'r', ' ', 'b', 'q', 'k', 'b', 'n', 'r'},
		{'1', '1', '1', '1', '1', '1'}
	}; //black to move, bishop sacked into f3 pawn
	
	public final static char[][] draw1 = {
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', 'R', ' ', ' '},
		{'P', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', 'p', ' '},
		{' ', ' ', 'Q', ' ', 'P', ' ', 'P', ' '},
		{'k', ' ', 'P', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', 'P', 'K', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{'1', '1', '1', '1', '1', '1'}
	}; //black to move, saw Rb7 - draw
	
	public final static char[][] queenKingMate = {
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', 'K', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{'k', ' ', ' ', ' ', ' ', ' ', ' ', 'q'},
		{'1', '1', '1', '1', '1', '1'}
	}; //white to move, mate
	
	public final static char[][] queenRookKingMate = {
		{' ', ' ', ' ', ' ', ' ', ' ', 'R', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', 'K', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{'k', ' ', ' ', ' ', ' ', ' ', ' ', 'q'},
		{'1', '1', '1', '1', '1', '1'}
	}; //white to move, mate
	
	public final static char[][] bishopKnightMate = {
		{' ', ' ', ' ', ' ', ' ', ' ', 'b', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', 'K', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{'k', ' ', ' ', ' ', ' ', ' ', ' ', 'n'},
		{'1', '1', '1', '1', '1', '1'}
	}; //white to move, mate
	
	public final static char[][] bishopBishopMate = {
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', 'K', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
		{'k', ' ', ' ', ' ', ' ', ' ', 'b', 'b'},
		{'1', '1', '1', '1', '1', '1'}
	}; //white to move, mate
}
